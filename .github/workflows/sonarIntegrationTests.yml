name: SonarQube Integration Tests
on:
  workflow_dispatch:
  push:
    # TODO - Remove this branch filter once the spike is complete.
    branches: [ sonar-evd-spike ]

jobs:
  test-jfrog-sonar:
    runs-on: ubuntu-latest
    services:
      sonar:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl --fail -uadmin:admin http://localhost:9000/api/system/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Fetch Sonar Access Token
        id: sonar_token
        run: |
          echo "Fetching SonarQube access token..."
            TOKEN=$(curl -s -X POST -u "admin:admin" \
                "http://localhost:9000/api/user_tokens/generate?name=github-actions-token" | jq -r '.token')
            echo "SONARQUBE_TOKEN=${TOKEN}" >> $GITHUB_ENV
            echo "JF_SONARQUBE_ACCESS_TOKEN=${TOKEN}" >> $GITHUB_ENV

      - name: Create Project in SonarQube
        run: |
          echo "Creating SonarQube project..."
          curl -u "admin:admin" -X POST "http://localhost:9000/api/projects/create?name=mvn-sonar&project=mvn-sonar"

      - name: Install JFrog CLI manually
        run: |
          curl -fL https://install-cli.jfrog.io | sh

      - name: Configure JFrog CLI
        run: |
          jf c add artifactory-server \
            --url ${{ secrets.PLATFORM_URL }} \
            --user ${{ secrets.PLATFORM_USER }} \
            --access-token ${{ secrets.PLATFORM_ADMIN_TOKEN }} \
            --interactive=false

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run SonarQube Analysis with JFrog CLI
        working-directory: testdata/maven/mavenprojectwithsonar
        run: |
          echo "Running SonarQube analysis..."
          jf mvn clean verify install sonar:sonar \
          -Dsonar.projectKey=mvn-sonar \
          -Dsonar.projectName='mvn-sonar' \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.token=${SONARQUBE_TOKEN}

      - name: Run sonar integration tests
        env:
          JF_SONARQUBE_ACCESS_TOKEN: ${{ env.SONARQUBE_TOKEN }}
          PLATFORM_URL: ${{ secrets.PLATFORM_URL }}
          PLATFORM_API_KEY: ${{ secrets.PLATFORM_ADMIN_TOKEN }}
        run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.sonarIntegration --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
